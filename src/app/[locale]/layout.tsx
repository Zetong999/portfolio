import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/app/globals.css";
import ResponsiveSidebarComponent from "@/components/responsiveSidebar";
import PrelineInit from "@/components/PrelineInit";
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { routing } from '@/i18n/routing';
import { notFound } from "next/navigation";
import LocaleSwitcher from "@/components/LocaleSwitcher";
import { setRequestLocale } from "next-intl/server";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};



export function generateStaticParams() {
  return routing.locales.map((locale) => ({locale}));
}


export default async function RootLayout({
  children,
  params
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {

  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
 // Enable static rendering
  setRequestLocale(locale);
  
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <PrelineInit /> {/* ✅ 添加 PrelineInit */}
        <div className=" flex flex-col sm:flex-row min-h-screen " >
            <NextIntlClientProvider>
          <ResponsiveSidebarComponent />
          <main className="sm:ml-[256px] flex justify-center">
            <div className="w-full max-w-4xl px-4">
            {children}
            </div>
          </main>
          <LocaleSwitcher/>
          </NextIntlClientProvider>

        </div>
      </body>
    </html>
  );
}
